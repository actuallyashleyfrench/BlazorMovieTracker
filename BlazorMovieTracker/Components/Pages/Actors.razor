@page "/actors"
@inject BlazorMovieTracker.Services.ActorService ActorService
@inject NavigationManager Nav
@using BlazorMovieTracker.Models
@rendermode InteractiveServer

<PageTitle>Actors</PageTitle>

<h1 class="mt-3 ms-3 mb-3">⭐ Actors</h1>

<div class="container mt-4">
    <div class="d-flex justify-content-end mb-3">
        <input @bind="searchTerm" @bind:event="oninput" placeholder="Search actor..." class="form-control w-50 me-3" />
        <a class="btn btn-primary" href="/add-actor">+ Add Actor</a>
    </div>
    @if (filteredActors == null)
    {
        <p>Loading...</p>
    }
    else if (!filteredActors.Any())
    {
        <p>No actors found.</p>
    }
    else
    {
        <!-- Actor Table -->
        <div class="card mt-4">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Actor</th>
                        <th>Movies</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var actor in filteredActors)
                    {
                        <!-- Row is clickable to navigate to details page -->
                        <tr @onclick="() => NavigateToDetails(actor.Id)" style="cursor: pointer;">
                            <td>@actor.Name</td>
                            <td>
                                @if (actor.Movies != null && actor.Movies.Any())
                                {
                                    <ul class="mb-0">
                                        @foreach (var movie in actor.Movies)
                                        {
                                            <li>@movie.Title</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <em>No movies listed</em>
                                }
                            </td>
                            <td>
                                <a href="/edit-actor/@actor.Id" class="btn btn-sm btn-secondary me-2" @onclick:stopPropagation>✏️Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
   
</div>


@code {
    private List<Actor>? allActors;
    private List<Actor>? filteredActors;
    private string _searchTerm = string.Empty;

    // Search term bound to search input
    private string searchTerm 
    { 
        get => _searchTerm; 
        set 
        { 
            _searchTerm = value;
            FilterActors();
        } 
    }

    // Load all movies
    protected override async Task OnInitializedAsync()
    {
        allActors = await ActorService.GetAllAsync();
        FilterActors();
    }

    // Filter actors based on search input
    private void FilterActors()
    {
        var query = allActors ?? new List<Actor>();

        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            query = query
            .Where(a => a.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
            .ToList();
        }
        filteredActors = query.OrderBy(a => a.Name).ToList();

    }

    // Navigate to actor details page
    void NavigateToDetails(int id)
    {
        Nav.NavigateTo($"/actor-details/{id}");
    }
}
