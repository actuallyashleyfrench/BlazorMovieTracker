@page "/actor-details/{Id:int}"
@inject BlazorMovieTracker.Services.ActorService ActorService
@using BlazorMovieTracker.Models

<!-- Set dynamic page title based on the actor name -->
<PageTitle>@actor?.Name Details</PageTitle>

<div class="container mt-4">
    <h3>Details</h3>

    @if (actor == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="card mt-4">
            <!-- Display movie information -->
            <div class="card-body">
                <h2 class="card-title">@actor.Name</h2>

                <h5 class="text-muted">@actor.DateOfBirth?.ToShortDateString()</h5>

                <p class="mt-3"><strong>Biography:</strong><br />
                    @if (!string.IsNullOrWhiteSpace(actor.Biography))
                    {
                        @actor.Biography
                    }
                    else
                    {
                        <em>No biography</em>
                    }
                </p>

                <p><strong>Roles:</strong></p>
                @if (actor.Movies != null && actor.Movies.Any())
                {
                    <ul>
                        @foreach (var movie in actor.Movies)
                        {
                            <li>@movie.Title</li>
                        }
                    </ul>
                }
                else
                {
                    <em>No movies listed</em><br /> 
                }

                <!-- Link back to the main actor list -->
                <a class="btn btn-secondary mt-3" href="/actors">← Back to List</a>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Actor? actor;

    protected override async Task OnInitializedAsync()
    {
        actor = await ActorService.GetByIdAsync(Id);
    }
}
