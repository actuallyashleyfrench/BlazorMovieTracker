// <auto-generated />
using System;
using BlazorMovieTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorMovieTracker.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20250731181124_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("ActorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("ActorMovie");

                    b.HasData(
                        new
                        {
                            ActorsId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            ActorsId = 2,
                            MoviesId = 1
                        },
                        new
                        {
                            ActorsId = 4,
                            MoviesId = 3
                        },
                        new
                        {
                            ActorsId = 5,
                            MoviesId = 3
                        });
                });

            modelBuilder.Entity("BlazorMovieTracker.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Austrailian actor known for his role as Jake Sully in Avatar.",
                            DateOfBirth = new DateTime(1976, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sam Worthington"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "American actress who portrayed Neytiri in Avatar and Gamora in the Marvel Cinematic Universe.",
                            DateOfBirth = new DateTime(1978, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zoe Saldana"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Veteran actress known for the Alien franchise and Avatar.",
                            DateOfBirth = new DateTime(1949, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sigourney Weaver"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Oscar-winning actor best known for Inception, Titanic, and The Revenant.",
                            DateOfBirth = new DateTime(1974, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "American actor who starred in Inception, 500 Days of Summer, and Looper.",
                            DateOfBirth = new DateTime(1981, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Joseph Gordon-Levitt"
                        });
                });

            modelBuilder.Entity("BlazorMovieTracker.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Watched")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A paraplegic marine is sent to the alien world of Pandora on a unique mission but becomes torn between following orders and protecting an indigenous civilization.",
                            Director = "James Cameron",
                            Genre = "Sci-Fi",
                            ReleaseYear = 2000,
                            Title = "Avatar",
                            Watched = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Two imprisoned men develop a deep friendship and find hope and redemption while serving long sentences in Shawshank State Penitentiary.",
                            Director = "Frank Darabont",
                            Genre = "Drama",
                            ReleaseYear = 1994,
                            Title = "The Shawshank Redemption",
                            Watched = false
                        },
                        new
                        {
                            Id = 3,
                            Description = "A skilled thief who steals secrets by infiltrating dreams is offered a chance to erase his criminal record by performing an impossible 'inception'—planting an idea into a target's subconscious.",
                            Director = "Christopher Nolan",
                            Genre = "Sci-Fi",
                            ReleaseYear = 2010,
                            Title = "Inception",
                            Watched = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "A young girl enters a magical world of spirits and gods where she must find her courage to save her parents and return home.",
                            Director = "Hayao Miyazaki",
                            Genre = "Animation",
                            ReleaseYear = 2001,
                            Title = "Spirited Away",
                            Watched = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "Set in the turbulent 1960s, a young man travels from Liverpool to New York in search of his father, falling in love and confronting the era's social changes, all set to Beatles music.",
                            Director = "Julie Taymor",
                            Genre = "Musical",
                            ReleaseYear = 2007,
                            Title = "Across the Universe",
                            Watched = true
                        },
                        new
                        {
                            Id = 6,
                            Description = "The aging patriarch of a crime family transfers control of his empire to his reluctant son, unraveling a saga of power, loyalty, and betrayal.",
                            Director = "Francis Ford Coppola",
                            Genre = "Crime",
                            ReleaseYear = 1972,
                            Title = "The Godfather",
                            Watched = false
                        });
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("BlazorMovieTracker.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorMovieTracker.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
